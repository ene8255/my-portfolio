{
    "projects": [
        {
            "id": 1,
            "name": "Music",
            "responsive": true,
            "desc": ["React로 생성한 반응형 음악 플레이리스트 사이트", "각 카테고리에 맞는 플레이리스트와 노래 정보를 등록 또는 수정할 수 있고, 랜덤으로 노래를 추천 받을 수 있는 기능이 있는 프로젝트 사이트 입니다.", "페이지 디자인은 Spotify 웹플레이어 의 디자인을 참고하였습니다."],
            "skills": "React, SCSS, Node.js, AWS, MySQL",
            "days": "16",
            "site": "https://ene8255.github.io/music-client/",
            "github": ["https://github.com/ene8255/music-client", "https://github.com/ene8255/music-server"],
            "functions": [
                {
                    "no": 1,
                    "desc": "데이터베이스로부터 플레이리스트 전체 목록 데이터와 각 플레이리스트의 노래 목록 데이터를 가져와서 화면에 나타냅니다. 노래 제목을 클릭하면 상세한 노래 정보를 볼 수 있는 페이지로 이동합니다. (READ, GET)",
                    "imgs": ["music1.gif"]
                },
                {
                    "no": 2,
                    "desc": "전체 노래 데이터 중에서 입력한 수 만큼의 곡을 랜덤으로 가져와 추천해주는 기능이 있습니다.",
                    "imgs": ["music2.gif"]
                },
                {
                    "no": 3,
                    "desc": "노래 제목, 아티스트, 앨범명으로 노래를 검색할 수 있는 기능이 있습니다. input의 value가 바뀔때마다 데이터베이스로부터 데이터를 가져와서 검색 결과가 계속 갱신됩니다.",
                    "imgs": ["music3.gif"]
                },
                {
                    "no": 4,
                    "desc": "플레이리스트 생성 페이지와 노래 추가하기 페이지의 form 양식에 맞게 데이터를 입력하고 submit 버튼을 클릭하면 새로운 플레이리스트와 노래를 추가할 수 있습니다. 데이터 유효성 검사를 통해 양식에 맞지 않는 데이터를 입력하거나 비어 있는 칸이 있을 경우 submit이 되지 않습니다. (CREATE, POST)",
                    "imgs": ["pcreate.png", "sadd.png"]
                },
                {
                    "no": 5,
                    "desc": "플레이리스트 페이지에서 수정하기 버튼을 클릭하면 플레이리스트 정보를 수정할 수 있고, 노래 정보를 볼 수 있는 페이지에서 수정하기 버튼을 클릭하면 노래 정보를 수정할 수 있는 페이지로 이동합니다. (UPDATE)",
                    "imgs": ["pedit.png", "sedit.png"]
                },
                {
                    "no": 6,
                    "desc": "플레이리스트 페이지에서 삭제 버튼을 클릭하면 플레이리스트를 삭제할 수 있고, 노래 목록의 휴지통 버튼을 클릭하면 각각의 노래를 삭제할 수 있습니다. (DELETE)",
                    "imgs": ["delete.png"]
                }
            ]
        },
        {
            "id": 2,
            "name": "Green Book",
            "responsive": true,
            "desc": ["PHP로 생성한 반응형 온라인 서점 사이트", "책 베스트셀러를 볼 수 있고, 회원가입과 로그인을 통해 책 리뷰를 작성할 수 있는 프로젝트 사이트 입니다."],
            "skills": "PHP, JavaScript, AWS, MySQL",
            "days": "14",
            "site": "https://green-book-i.herokuapp.com/",
            "github": ["https://github.com/ene8255/green-book"],
            "functions": [
                {
                    "no": 1,
                    "desc": "데이터베이스로부터 베스트셀러 데이터를 가져와서 화면에 나타내고, 분야를 선택하면 베스트셀러를 분야별로 분류해 볼 수 있습니다. (READ, GET)",
                    "imgs": ["book6.gif"]
                },
                {
                    "no": 2,
                    "desc": "SESSION을 활용하여 장바구니에 상품을 담고, 삭제할 수 있는 기능을 구현하였습니다.",
                    "imgs": ["book1.gif"]
                },
                {
                    "no": 3,
                    "desc": "사이트에 로그인을 한 경우에만 각 베스트셀러 상세 페이지에 리뷰 작성 form이 나타나고, 리뷰를 등록할 수 있습니다. (CREATE, POST)",
                    "imgs": ["book2.gif"]
                },
                {
                    "no": 4,
                    "desc": "마이페이지에서는 회뭔 정보와 작성한 리뷰 정보를 데이터베이스로부터 가져와서 나타냅니다. 마이페이지에서 비밀번호를 변경할 수 있고, 작성한 리뷰를 삭제할 수 있는 기능이 있습니다. (DELETE)",
                    "imgs": ["book3.gif"]
                },
                {
                    "no": 5,
                    "desc": "로그인시, 각 상품의 상세페이지와 장바구니에서 상품의 가격이 10% 할인된 회원가로 표시되는 것을 볼 수 있습니다.",
                    "imgs": ["price_1.png", "price_2.png"]
                },
                {
                    "no": 6,
                    "desc": "관리자 계정으로 로그인한 경우에만 새 상품 추가(CREATE, POST), 상품 정보 수정(UPDATE), 상품 삭제(DELETE)가 가능합니다.",
                    "imgs": ["book4.gif", "book5.gif"]
                }
            ]
        },
        {
            "id": 3,
            "name": "Bewegen clone",
            "responsive": false,
            "desc": ["Vanilla JavaScript로 구현한 Bewegen 클론 사이트", "라이브러리를 사용하지 않고, 메인 페이지와 토글 메뉴 까지 오리지널 웹사이트의 동적인 효과를 최대한 똑같이 구현하기 위해 노력했습니다.", "original 웹사이트 주소: https://bewegen.com/en"],
            "skills": "HTML5, CSS3, JavaScript",
            "days": "10",
            "site": "https://ene8255.github.io/bewegen-clone/",
            "github": ["https://github.com/ene8255/bewegen-clone"],
            "functions": [
                {
                    "no": 1,
                    "desc": "JavaScript를 이용하여 scrollTop이 특정 위치에 도달하면, 마우스휠 또는 버튼 클릭으로 제어할 수 있는 carousel이 나타나게 하였습니다. 슬라이드가 끝에 도달하거나 Skip 버튼을 클릭하면 다음 섹션으로 넘어갈 수 있습니다.",
                    "imgs": ["bewegen3.gif"]
                },
                {
                    "no": 2,
                    "desc": "JavaScript로 버튼 클릭으로 동시에 조절 가능한 2개의 carousel을 구현하였습니다. CSS animation을 이용하여 자전거가 이동하게 하는 효과를 적용하였고, 자전거는 마우스휠의 방향이 바뀜에 따라 다른 방향으로 움직이게 하였습니다.",
                    "imgs": ["bewegen4.gif"]
                },
                {
                    "no": 3,
                    "desc": "JavaScript의 클릭 이벤트와 classList, 그리고 CSS로 동적인 효과를 적용하여 버튼 클릭시 이벤트가 일어나도록 하였습니다.",
                    "imgs": ["bewegen5.gif"]
                },
                {
                    "no": 4,
                    "desc": "메뉴 토글 버튼을 클릭하면 동적인 효과와 함께 사이트 메뉴가 나타나도록 하였습니다.",
                    "imgs": ["bewegen6.gif"]
                }
            ]
        },
        {
            "id": 4,
            "name": "Inhye's Portfolio",
            "responsive": false,
            "desc": ["React로 생성한 포트폴리오 사이트", "조금 단순한 페이지 구성으로 불필요한 내용은 최대한 줄이고 깔끔한 포트폴리오 사이트를 만들어 보았습니다."],
            "skills": "React, SCSS",
            "days": "12",
            "site": "https://ene8255.github.io/my-portfolio/",
            "github": ["https://github.com/ene8255/my-portfolio"],
            "functions": [
                {
                    "no": 1,
                    "desc": "canvas를 활용하여 페이지 새로고침시 배경에 동적인 효과가 나타나게 하였습니다.",
                    "imgs": ["portfolio1.gif"]
                },
                {
                    "no": 2,
                    "desc": "Skills 섹션에서는 사용 가능한 언어 또는 라이브러리 등의 로고를 볼 수 있고, 각 요소에 마우스를 hover하면 요소의 색상이 변하고 세부적인 설명을 볼 수 있습니다. Projects 섹션에서는 제가 만든 프로젝트 사이트 carousel을 볼 수 있고, 각 요소의 사진을 클릭하면 세부적인 설명을 볼 수 있는 페이지로 이동합니다. 프로젝트 상세 페이지에서는 JSON 파일로부터 각 프로젝트 데이터를 가져와서 화면에 나타내도록 하였습니다.",
                    "imgs": ["portfolio2.gif"]
                },
                {
                    "no": 3,
                    "desc": "사이트 메뉴의 해 모양 아이콘을 클릭하면 다크모드가 적용되고, 아이콘은 달 모양으로 변경됩니다. styled-components의 ThemeProvider를 활용하여 테마가 변경됨에 따라 배경 색상과 폰트 색상 등이 변경되도록 하였습니다. 다시 달 모양 아이콘을 클릭하면 아이콘은 해 모양으로 변경되고, 라이트모드가 적용됩니다.",
                    "imgs": ["portfolio3.gif"]
                }
            ]
        }
    ]
}